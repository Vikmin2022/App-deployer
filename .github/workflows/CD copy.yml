env:
  region:             "us-central1"
  app_name:           "artemis"
  app_version:        "$(GITHUB_SHA)"
  app_port:           "5000"
  project_id:         "terraform-project-vm"
  repository:         "us-central1-docker.pkg.dev/${{ secrets.PROJECT_ID }}/artemis/artemis"
  cluster_name:       "terraform-project "
  helm_repository:    "https://github.com/farrukh90/custom_helm_chart.git"
  domain:             "vikmin2022.de"
  environment:        "qa"




name: CD

on:
  workflow_run:
    workflows: [ CI ]
    types:
      - completed
  workflow_dispatch:


# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest


    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      # Authenticate to GCP

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.SERVICE_ACCOUNT }}'


      - id: 'get-credentials'
        uses: 'google-github-actions/get-gke-credentials@v1'
        with:
          cluster_name: 'project-cluster'
          location: 'us-central1'

      # The KUBECONFIG env var is automatically exported and picked up by kubectl.
      - id: 'kubeconfig'
        run: 'mkdir ~/.kube && cat $KUBECONFIG > ~/.kube/config'

      
      - name: Initialize
        working-directory: "deployment"
        run: |
          terraform init 


      - name: Create workspace
        working-directory: "deployment"
        run: |
          terraform  workspace  select  ${{ env.environment }}   ||  terraform workspace  new  ${{ env.environment }}


      # Runs a set of commands using the runners shell
      - name: Deploy Application
        working-directory: "deployment"
        run: |
          terraform apply   \
          -var app_version="${{ env.app_version }}"   \
          -var app_port="${{ env.app_port }}"          \
          -var domain="${{ env.domain }}"          \
          -var app_name="${{ env.app_name }}"   \
          -var project_id="${{ env.project_id }}" \
          -var environment="${{ env.environment }}" \
          --auto-approve
